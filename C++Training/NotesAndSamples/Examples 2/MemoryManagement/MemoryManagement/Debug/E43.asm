; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Ali\Samples\C++\Examples 2\MemoryManagement\MemoryManagement\E43.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ		; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>
PUBLIC	??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ		; std::auto_ptr<Ex43::SB>::~auto_ptr<Ex43::SB>
PUBLIC	??4?$auto_ptr@USA@Ex43@@@std@@QAEAAV01@AAV01@@Z	; std::auto_ptr<Ex43::SA>::operator=
PUBLIC	??C?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ	; std::auto_ptr<Ex43::SB>::operator->
PUBLIC	??4?$auto_ptr@USB@Ex43@@@std@@QAEAAV01@AAV01@@Z	; std::auto_ptr<Ex43::SB>::operator=
PUBLIC	??C?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ	; std::auto_ptr<Ex43::SA>::operator->
PUBLIC	??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z ; std::auto_ptr<Ex43::SB>::auto_ptr<Ex43::SB>
PUBLIC	??0SB@Ex43@@QAE@XZ				; Ex43::SB::SB
PUBLIC	??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z ; std::auto_ptr<Ex43::SA>::auto_ptr<Ex43::SA>
PUBLIC	??0SA@Ex43@@QAE@XZ				; Ex43::SA::SA
PUBLIC	?main43@@YAXXZ					; main43
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT xdata$x
; File c:\ali\samples\c++\examples 2\memorymanagement\memorymanagement\e43.cpp
xdata$x	SEGMENT
__unwindtable$?main43@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?main43@@YAXXZ$0
__ehfuncinfo$?main43@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?main43@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?main43@@YAXXZ
_TEXT	SEGMENT
tv81 = -256						; size = 4
tv71 = -256						; size = 4
$T36528 = -248						; size = 4
$T36531 = -236						; size = 4
_p2$ = -32						; size = 4
_p1$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?main43@@YAXXZ PROC					; main43, COMDAT

; 22   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?main43@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 23   : 	auto_ptr<SA> p1(new SA);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T36528[ebp], eax
	cmp	DWORD PTR $T36528[ebp], 0
	je	SHORT $LN3@main43
	mov	ecx, DWORD PTR $T36528[ebp]
	call	??0SA@Ex43@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@main43
$LN3@main43:
	mov	DWORD PTR tv71[ebp], 0
$LN4@main43:
	mov	eax, DWORD PTR tv71[ebp]
	push	eax
	lea	ecx, DWORD PTR _p1$[ebp]
	call	??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z ; std::auto_ptr<Ex43::SA>::auto_ptr<Ex43::SA>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 24   : 
; 25   : 	auto_ptr<SB> p2(new SB);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T36531[ebp], eax
	cmp	DWORD PTR $T36531[ebp], 0
	je	SHORT $LN5@main43
	mov	ecx, DWORD PTR $T36531[ebp]
	call	??0SB@Ex43@@QAE@XZ
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@main43
$LN5@main43:
	mov	DWORD PTR tv81[ebp], 0
$LN6@main43:
	mov	eax, DWORD PTR tv81[ebp]
	push	eax
	lea	ecx, DWORD PTR _p2$[ebp]
	call	??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z ; std::auto_ptr<Ex43::SB>::auto_ptr<Ex43::SB>

; 26   : 	
; 27   : 	p1->m_sb=p2;

	lea	eax, DWORD PTR _p2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p1$[ebp]
	call	??C?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ ; std::auto_ptr<Ex43::SA>::operator->
	mov	ecx, eax
	call	??4?$auto_ptr@USB@Ex43@@@std@@QAEAAV01@AAV01@@Z ; std::auto_ptr<Ex43::SB>::operator=

; 28   : 	p2->m_sa=p1;

	lea	eax, DWORD PTR _p1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p2$[ebp]
	call	??C?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ ; std::auto_ptr<Ex43::SB>::operator->
	mov	ecx, eax
	call	??4?$auto_ptr@USA@Ex43@@@std@@QAEAAV01@AAV01@@Z ; std::auto_ptr<Ex43::SA>::operator=

; 29   : }

	lea	ecx, DWORD PTR _p2$[ebp]
	call	??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ	; std::auto_ptr<Ex43::SB>::~auto_ptr<Ex43::SB>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _p1$[ebp]
	call	??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ	; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@main43
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@main43:
	DD	2
	DD	$LN12@main43
$LN12@main43:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@main43
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@main43
$LN10@main43:
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN9@main43:
	DB	112					; 00000070H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?main43@@YAXXZ$0:
	lea	ecx, DWORD PTR _p1$[ebp]
	jmp	??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ	; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>
__ehhandler$?main43@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?main43@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?main43@@YAXXZ ENDP					; main43
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SA@Ex43@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SA@Ex43@@QAE@XZ PROC					; Ex43::SA::SA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z ; std::auto_ptr<Ex43::SB>::auto_ptr<Ex43::SB>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SA@Ex43@@QAE@XZ ENDP					; Ex43::SA::SA
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0SB@Ex43@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SB@Ex43@@QAE@XZ PROC					; Ex43::SB::SB, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z ; std::auto_ptr<Ex43::SA>::auto_ptr<Ex43::SA>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SB@Ex43@@QAE@XZ ENDP					; Ex43::SB::SB
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z PROC	; std::auto_ptr<Ex43::SB>::auto_ptr<Ex43::SB>, COMDAT
; _this$ = ecx

; 872  : 		{	// construct from object pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 873  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_ptr@USB@Ex43@@@std@@QAE@PAUSB@Ex43@@@Z ENDP	; std::auto_ptr<Ex43::SB>::auto_ptr<Ex43::SB>
_TEXT	ENDS
PUBLIC	?reset@?$auto_ptr@USB@Ex43@@@std@@QAEXPAUSB@Ex43@@@Z ; std::auto_ptr<Ex43::SB>::reset
PUBLIC	?release@?$auto_ptr@USB@Ex43@@@std@@QAEPAUSB@Ex43@@XZ ; std::auto_ptr<Ex43::SB>::release
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$auto_ptr@USB@Ex43@@@std@@QAEAAV01@AAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$auto_ptr@USB@Ex43@@@std@@QAEAAV01@AAV01@@Z PROC	; std::auto_ptr<Ex43::SB>::operator=, COMDAT
; _this$ = ecx

; 916  : 		{	// assign compatible _Right (assume pointer)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 917  : 		reset(_Right.release());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$auto_ptr@USB@Ex43@@@std@@QAEPAUSB@Ex43@@XZ ; std::auto_ptr<Ex43::SB>::release
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@?$auto_ptr@USB@Ex43@@@std@@QAEXPAUSB@Ex43@@@Z ; std::auto_ptr<Ex43::SB>::reset

; 918  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 919  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$auto_ptr@USB@Ex43@@@std@@QAEAAV01@AAV01@@Z ENDP	; std::auto_ptr<Ex43::SB>::operator=
_TEXT	ENDS
PUBLIC	??_GSB@Ex43@@QAEPAXI@Z				; Ex43::SB::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T36571 = -224						; size = 4
$T36572 = -212						; size = 4
_this$ = -8						; size = 4
??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ PROC		; std::auto_ptr<Ex43::SB>::~auto_ptr<Ex43::SB>, COMDAT
; _this$ = ecx

; 930  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 931  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T36572[ebp], ecx
	mov	edx, DWORD PTR $T36572[ebp]
	mov	DWORD PTR $T36571[ebp], edx
	cmp	DWORD PTR $T36571[ebp], 0
	je	SHORT $LN3@auto_ptr
	push	1
	mov	ecx, DWORD PTR $T36571[ebp]
	call	??_GSB@Ex43@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@auto_ptr
$LN3@auto_ptr:
	mov	DWORD PTR tv68[ebp], 0
$LN1@auto_ptr:

; 932  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ ENDP		; std::auto_ptr<Ex43::SB>::~auto_ptr<Ex43::SB>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ ; std::auto_ptr<Ex43::SB>::get
PUBLIC	??_C@_1DI@MCLINNKC@?$AAa?$AAu?$AAt?$AAo?$AA_?$AAp?$AAt?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IM@EJIMMBE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
;	COMDAT ??_C@_1DI@MCLINNKC@?$AAa?$AAu?$AAt?$AAo?$AA_?$AAp?$AAt?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MCLINNKC@?$AAa?$AAu?$AAt?$AAo?$AA_?$AAp?$AAt?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'a'
	DB	00H, 'u', 00H, 't', 00H, 'o', 00H, '_', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EJIMMBE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EJIMMBE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??C?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ PROC	; std::auto_ptr<Ex43::SB>::operator->, COMDAT
; _this$ = ecx

; 945  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 946  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 947  : 		if (_Myptr == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@operator

; 948  : 			_DEBUG_ERROR("auto_ptr not dereferencable");

	mov	esi, esp
	push	948					; 000003b4H
	push	OFFSET ??_C@_1IM@EJIMMBE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MCLINNKC@?$AAa?$AAu?$AAt?$AAo?$AA_?$AAp?$AAt?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:

; 949  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 950  : 
; 951  : 		return (get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ ; std::auto_ptr<Ex43::SB>::get

; 952  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ ENDP	; std::auto_ptr<Ex43::SB>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z PROC	; std::auto_ptr<Ex43::SA>::auto_ptr<Ex43::SA>, COMDAT
; _this$ = ecx

; 872  : 		{	// construct from object pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 873  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_ptr@USA@Ex43@@@std@@QAE@PAUSA@Ex43@@@Z ENDP	; std::auto_ptr<Ex43::SA>::auto_ptr<Ex43::SA>
_TEXT	ENDS
PUBLIC	?reset@?$auto_ptr@USA@Ex43@@@std@@QAEXPAUSA@Ex43@@@Z ; std::auto_ptr<Ex43::SA>::reset
PUBLIC	?release@?$auto_ptr@USA@Ex43@@@std@@QAEPAUSA@Ex43@@XZ ; std::auto_ptr<Ex43::SA>::release
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$auto_ptr@USA@Ex43@@@std@@QAEAAV01@AAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$auto_ptr@USA@Ex43@@@std@@QAEAAV01@AAV01@@Z PROC	; std::auto_ptr<Ex43::SA>::operator=, COMDAT
; _this$ = ecx

; 916  : 		{	// assign compatible _Right (assume pointer)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 917  : 		reset(_Right.release());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$auto_ptr@USA@Ex43@@@std@@QAEPAUSA@Ex43@@XZ ; std::auto_ptr<Ex43::SA>::release
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@?$auto_ptr@USA@Ex43@@@std@@QAEXPAUSA@Ex43@@@Z ; std::auto_ptr<Ex43::SA>::reset

; 918  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 919  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$auto_ptr@USA@Ex43@@@std@@QAEAAV01@AAV01@@Z ENDP	; std::auto_ptr<Ex43::SA>::operator=
_TEXT	ENDS
PUBLIC	??_GSA@Ex43@@QAEPAXI@Z				; Ex43::SA::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T36583 = -224						; size = 4
$T36584 = -212						; size = 4
_this$ = -8						; size = 4
??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ PROC		; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>, COMDAT
; _this$ = ecx

; 930  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 931  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T36584[ebp], ecx
	mov	edx, DWORD PTR $T36584[ebp]
	mov	DWORD PTR $T36583[ebp], edx
	cmp	DWORD PTR $T36583[ebp], 0
	je	SHORT $LN3@auto_ptr@2
	push	1
	mov	ecx, DWORD PTR $T36583[ebp]
	call	??_GSA@Ex43@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@auto_ptr@2
$LN3@auto_ptr@2:
	mov	DWORD PTR tv68[ebp], 0
$LN1@auto_ptr@2:

; 932  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ ENDP		; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ ; std::auto_ptr<Ex43::SA>::get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ PROC	; std::auto_ptr<Ex43::SA>::operator->, COMDAT
; _this$ = ecx

; 945  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 946  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 947  : 		if (_Myptr == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@operator@2

; 948  : 			_DEBUG_ERROR("auto_ptr not dereferencable");

	mov	esi, esp
	push	948					; 000003b4H
	push	OFFSET ??_C@_1IM@EJIMMBE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MCLINNKC@?$AAa?$AAu?$AAt?$AAo?$AA_?$AAp?$AAt?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:

; 949  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 950  : 
; 951  : 		return (get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ ; std::auto_ptr<Ex43::SA>::get

; 952  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ ENDP	; std::auto_ptr<Ex43::SA>::operator->
_TEXT	ENDS
PUBLIC	??1SB@Ex43@@QAE@XZ				; Ex43::SB::~SB
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSB@Ex43@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSB@Ex43@@QAEPAXI@Z PROC				; Ex43::SB::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SB@Ex43@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSB@Ex43@@QAEPAXI@Z ENDP				; Ex43::SB::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1SA@Ex43@@QAE@XZ				; Ex43::SA::~SA
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSA@Ex43@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSA@Ex43@@QAEPAXI@Z PROC				; Ex43::SA::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SA@Ex43@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSA@Ex43@@QAEPAXI@Z ENDP				; Ex43::SA::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1SB@Ex43@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SB@Ex43@@QAE@XZ PROC					; Ex43::SB::~SB, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$auto_ptr@USA@Ex43@@@std@@QAE@XZ	; std::auto_ptr<Ex43::SA>::~auto_ptr<Ex43::SA>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SB@Ex43@@QAE@XZ ENDP					; Ex43::SB::~SB
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1SA@Ex43@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SA@Ex43@@QAE@XZ PROC					; Ex43::SA::~SA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$auto_ptr@USB@Ex43@@@std@@QAE@XZ	; std::auto_ptr<Ex43::SB>::~auto_ptr<Ex43::SB>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SA@Ex43@@QAE@XZ ENDP					; Ex43::SA::~SA
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ PROC	; std::auto_ptr<Ex43::SB>::get, COMDAT
; _this$ = ecx

; 955  : 		{	// return wrapped pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 956  : 		return (_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 957  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$auto_ptr@USB@Ex43@@@std@@QBEPAUSB@Ex43@@XZ ENDP	; std::auto_ptr<Ex43::SB>::get
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release@?$auto_ptr@USB@Ex43@@@std@@QAEPAUSB@Ex43@@XZ
_TEXT	SEGMENT
__Tmp$ = -20						; size = 4
_this$ = -8						; size = 4
?release@?$auto_ptr@USB@Ex43@@@std@@QAEPAUSB@Ex43@@XZ PROC ; std::auto_ptr<Ex43::SB>::release, COMDAT
; _this$ = ecx

; 960  : 		{	// return wrapped pointer and give up ownership

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 961  : 		_Ty *_Tmp = _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 962  : 		_Myptr = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 963  : 		return (_Tmp);

	mov	eax, DWORD PTR __Tmp$[ebp]

; 964  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$auto_ptr@USB@Ex43@@@std@@QAEPAUSB@Ex43@@XZ ENDP ; std::auto_ptr<Ex43::SB>::release
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@?$auto_ptr@USB@Ex43@@@std@@QAEXPAUSB@Ex43@@@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T36605 = -224						; size = 4
$T36606 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?reset@?$auto_ptr@USB@Ex43@@@std@@QAEXPAUSB@Ex43@@@Z PROC ; std::auto_ptr<Ex43::SB>::reset, COMDAT
; _this$ = ecx

; 967  : 		{	// destroy designated object and store new pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		if (_Ptr != _Myptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN1@reset

; 969  : 			delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T36606[ebp], ecx
	mov	edx, DWORD PTR $T36606[ebp]
	mov	DWORD PTR $T36605[ebp], edx
	cmp	DWORD PTR $T36605[ebp], 0
	je	SHORT $LN4@reset
	push	1
	mov	ecx, DWORD PTR $T36605[ebp]
	call	??_GSB@Ex43@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN1@reset
$LN4@reset:
	mov	DWORD PTR tv69[ebp], 0
$LN1@reset:

; 970  : 		_Myptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 971  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$auto_ptr@USB@Ex43@@@std@@QAEXPAUSB@Ex43@@@Z ENDP ; std::auto_ptr<Ex43::SB>::reset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ PROC	; std::auto_ptr<Ex43::SA>::get, COMDAT
; _this$ = ecx

; 955  : 		{	// return wrapped pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 956  : 		return (_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 957  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$auto_ptr@USA@Ex43@@@std@@QBEPAUSA@Ex43@@XZ ENDP	; std::auto_ptr<Ex43::SA>::get
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release@?$auto_ptr@USA@Ex43@@@std@@QAEPAUSA@Ex43@@XZ
_TEXT	SEGMENT
__Tmp$ = -20						; size = 4
_this$ = -8						; size = 4
?release@?$auto_ptr@USA@Ex43@@@std@@QAEPAUSA@Ex43@@XZ PROC ; std::auto_ptr<Ex43::SA>::release, COMDAT
; _this$ = ecx

; 960  : 		{	// return wrapped pointer and give up ownership

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 961  : 		_Ty *_Tmp = _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 962  : 		_Myptr = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 963  : 		return (_Tmp);

	mov	eax, DWORD PTR __Tmp$[ebp]

; 964  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$auto_ptr@USA@Ex43@@@std@@QAEPAUSA@Ex43@@XZ ENDP ; std::auto_ptr<Ex43::SA>::release
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@?$auto_ptr@USA@Ex43@@@std@@QAEXPAUSA@Ex43@@@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T36615 = -224						; size = 4
$T36616 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?reset@?$auto_ptr@USA@Ex43@@@std@@QAEXPAUSA@Ex43@@@Z PROC ; std::auto_ptr<Ex43::SA>::reset, COMDAT
; _this$ = ecx

; 967  : 		{	// destroy designated object and store new pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		if (_Ptr != _Myptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN1@reset@2

; 969  : 			delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T36616[ebp], ecx
	mov	edx, DWORD PTR $T36616[ebp]
	mov	DWORD PTR $T36615[ebp], edx
	cmp	DWORD PTR $T36615[ebp], 0
	je	SHORT $LN4@reset@2
	push	1
	mov	ecx, DWORD PTR $T36615[ebp]
	call	??_GSA@Ex43@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN1@reset@2
$LN4@reset@2:
	mov	DWORD PTR tv69[ebp], 0
$LN1@reset@2:

; 970  : 		_Myptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 971  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$auto_ptr@USA@Ex43@@@std@@QAEXPAUSA@Ex43@@@Z ENDP ; std::auto_ptr<Ex43::SA>::reset
_TEXT	ENDS
END
